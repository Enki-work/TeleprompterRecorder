workflows:
    ios-workflow:
      name: enki.TeleprompterRecorder
      integrations:
       app_store_connect: enki
      environment:
        groups:
        # Add the group environment variables in Codemagic UI (either in Application/Team variables) - https://docs.codemagic.io/variables/environment-variable-groups/
          - app_store_credentials # <-- (APP_STORE_CONNECT_ISSUER_ID, APP_STORE_CONNECT_KEY_IDENTIFIER, APP_STORE_CONNECT_PRIVATE_KEY)
            # APP_STORE_CONNECT_ISSUER_ID <-- Put your App Store Connect Issuer Id here
            # APP_STORE_CONNECT_KEY_IDENTIFIER <-- Put your App Store Connect Key Identifier here
            # APP_STORE_CONNECT_PRIVATE_KEY <-- Put your App Store Connect Private Key here
            # See the following link for more details - https://docs.codemagic.io/code-signing-yaml/signing-ios/
            # https://appstoreconnect.apple.com/access/api
          - certificate_credentials # <-- (CERTIFICATE_PRIVATE_KEY - Put your Certificate Private Key here)
          - ios_config
        xcode: latest
        cocoapods: default
      triggering:
        events:
          - push
          - tag
          - pull_request
        branch_patterns:
          - pattern: 'develop'
            include: true
            source: true
      scripts:
        - name: Set up keychain to be used for codesigning using Codemagic CLI 'keychain' command
          script: |
            keychain initialize
        - name: Fetch signing files
          script: |
            app-store-connect fetch-signing-files $BUNDLE_ID --type IOS_APP_STORE --create
        - name: Use system default keychain
          script: |
            keychain add-certificates
        - name: Set up code signing settings on Xcode project
          script: xcode-project use-profiles
        - name: Add file
          script: |
            #!/bin/sh
            cd $FCI_BUILD_DIR
            cd ./TeleprompterRecorder/TeleprompterRecorder/
            echo ${GoogleServiceInfo} | base64 --decode > "GoogleService-Info.plist"
            cd ./Resource/
            echo ${ReleaseXcconfig} | base64 --decode > "Release.xcconfig"
        - name: Increment build number
          script: |
            #!/bin/sh
            set -e
            set -x
            cd $FCI_BUILD_DIR
            cd ./TeleprompterRecorder/
            # agvtool new-version -all $(($BUILD_NUMBER + 1))
            agvtool new-version -all $(($(app-store-connect get-latest-testflight-build-number "$APP_STORE_ID") + 1))
        - name: Build ipa for distribution
          script: |
            set -x
            xcode-project build-ipa --project "./TeleprompterRecorder/$XCODE_WORKSPACE" --scheme "$XCODE_SCHEME"
      artifacts:
        - build/ios/ipa/*.ipa
        - /tmp/xcodebuild_logs/*.log
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
        - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
      publishing:
        app_store_connect:
        # Use referenced App Store Connect API key to authenticate binary upload
         auth: integration

        # Configuration related to TestFlight (optional)

        # Optional boolean, defaults to false. Whether or not to submit the uploaded
        # build to TestFlight beta review. Required for distributing to beta groups.
        # Note: This action is performed during post-processing.
         submit_to_testflight: true

        # Specify the names of beta tester groups that will get access to the build
        # once it has passed beta review.
         beta_groups:
         - group name test
    
    # Configuration related to App Store (optional)

    # Optional boolean, defaults to false. Whether or not to submit the uploaded
    # build to App Store review. Note: This action is performed during post-processing.
         submit_to_app_store: true
    
    # Optional, defaults to MANUAL. Supported values: MANUAL, AFTER_APPROVAL or SCHEDULED
         release_type: SCHEDULED

    # Optional. Timezone-aware ISO8601 timestamp with hour precision when scheduling
    # the release. This can be only used when release type is set to SCHEDULED.
    # It cannot be set to a date in the past.
        #earliest_release_date: 2021-12-01T14:00:00+00:00
    
    # Optional. The name of the person or entity that owns the exclusive rights
    # to your app, preceded by the year the rights were obtained.
         copyright: 2021 Nevercode Ltd
        email:
            recipients:
              - wdydhd@vip.qq.com
            #  - user2@example.com
            notify:
              success: true
              failure: true
        #slack:
                #    channel: '#builds'
                    #notify_on_build_start: true    # To receive a notification when a build starts
                    #notify:
                      #success: false               # To not receive a notification when a build succeeds
                      #failure: false               # To not receive a notification when a build fails
